{"version":3,"sources":["services/blogs.js","components/form.js","components/bloglist.js","components/errormessage.js","App.js","index.js"],"names":["baseUrl","methods","getAll","axios","get","then","response","data","create","newObject","post","update","id","put","del","delete","Form","formSubmit","newAuthor","newTitle","newUrl","authorHandler","titleHandler","urlHandler","className","onSubmit","value","onChange","placeholder","type","Blog","blog","onPostLike","title","author","url","likes","onClick","BlogList","blogs","map","ErrorMessage","errorObject","styleObj","color","border","style","text","App","useState","setBlogs","setNewAuthor","setNewTitle","setNewUrl","errorMessage","setErrorMessage","useEffect","blogService","console","log","handleChangingErrorMessage","messageText","messageColor","setTimeout","event","preventDefault","filter","length","blogObj","concat","catch","error","message","target","blogLiked","find","n","newBlogs","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e2035f16.chunk.js","sourcesContent":["import axios from \"axios\"\nconst baseUrl = 'http://localhost:3001/api/blogs'\n\nconst getAll = () => (\n    axios.get(baseUrl).then(response => response.data)\n)\n\nconst create = newObject => (\n    axios.post(baseUrl, newObject).then(response => response.data)\n)\n\nconst update = (id, newObject) => (\n    axios.put(`${baseUrl}/${id}`, newObject).then(response => response.data)\n)\n\nconst del = (id) => (\n    axios.delete(`${baseUrl}/${id}`).then(response => response.data)\n)\n\nconst methods = { getAll, create, update, del }\n\nexport default methods","import React from \"react\"\n\nconst Form = ({ formSubmit, newAuthor, newTitle, newUrl, authorHandler, titleHandler, urlHandler }) => (\n    <div className=\"new-blog-form-div\">\n      <h2>Add a New blog</h2>\n      <div className=\"new-blog-form\">\n        <form onSubmit={formSubmit}>\n          <div>\n            <input value={newAuthor} onChange={authorHandler} placeholder=\"Author\" />\n          </div>\n          <div>\n            <input value={newTitle} onChange={titleHandler} placeholder=\"Title\" />\n          </div>\n          <div>\n            <input value={newUrl} onChange={urlHandler} placeholder=\"Url\" />\n          </div>\n          <button type=\"submit\">add</button>\n        </form>\n      </div>\n    </div>\n  \n  )\n\n  export default Form    ","import React from \"react\"\n\nconst BlogList = ({ blogs, onPostLike }) => (\n    <div className=\"blog-list\">\n      <h2>List of blogs</h2>\n      {blogs.map( (blog) => {\n        return <Blog blog={blog} onPostLike={onPostLike} key={blog.id}/>\n      })}\n    </div>\n  )\n  \n  const Blog = ({ blog, onPostLike }) => (\n    <div className=\"blog-item\">\n      <p>{blog.title} by {blog.author}</p>\n      <p>Link to blog {blog.url}</p>\n      <p>Likes: {blog.likes}</p>\n      <button onClick={() => onPostLike(blog.id)}>Like this blog post</button>\n    </div>\n  )\n\n  export default BlogList","import React from \"react\"\n\nconst ErrorMessage = ({ errorObject }) => {\n    if (errorObject === null) {\n      return null\n    }\n    const styleObj = {\n      color: errorObject.color,\n      border: `2px solid ${errorObject.color}`\n    }\n    return (\n      <div className={'errorMessage'} style={styleObj}>\n        {errorObject.text}\n      </div>\n      )\n  }\n  \n  export default ErrorMessage","import React, { useState, useEffect } from 'react'\nimport blogService from './services/blogs'\nimport Form from './components/form'\nimport BlogList from './components/bloglist'\nimport ErrorMessage from './components/errormessage'\n\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([]) \n  const [newAuthor, setNewAuthor] = useState('')\n  const [newTitle, setNewTitle] = useState('')\n  const [newUrl, setNewUrl] = useState('')\n  const [ errorMessage, setErrorMessage ] = useState(null)\n\n  useEffect(() => {\n    blogService\n      .getAll()\n      .then(response => {\n        console.log(response)\n        setBlogs(response)\n    })\n  }, [])\n\n  const handleAuthorChange = (event) => setNewAuthor(event.target.value)\n  const handleTitleChange = (event) => setNewTitle(event.target.value)\n  const handleUrlChange = (event) => setNewUrl(event.target.value)\n\n  const handleChangingErrorMessage = (messageText, messageColor) => {\n    const newErrorObject = {\n      text:messageText,\n      color:messageColor\n    }\n    setErrorMessage(newErrorObject)\n    setTimeout(() => {\n      setErrorMessage(null)\n    }, 5000)\n  }\n\n\n  const addBlog = (event) => {\n    event.preventDefault()\n    if ( blogs.filter( blog => blog.url === newUrl ).length > 0 ) {\n      console.log(\"Current blog already added.\")\n      return\n    }\n    const blogObj = {\n      author: newAuthor,\n      title: newTitle,\n      url: newUrl\n    }\n    blogService\n      .create(blogObj)\n      .then(response => {\n        /* console.log(\"post promise fulfilled\") */\n        handleChangingErrorMessage(`${blogObj.title} by ${blogObj.author} added successfully`, \"green\")\n        setBlogs(blogs.concat(response))\n        setNewAuthor('')\n        setNewTitle('')\n        setNewUrl('')\n    })\n    .catch(error => {\n      console.log(error.message)\n\n      handleChangingErrorMessage(error.message, \"red\")\n    })\n  }\n\n  const onPostLike = (id) => {\n    const blogLiked = blogs.find(n => n.id === id)\n    const blog = {\n      author: blogLiked.author,\n      title: blogLiked.title,\n      url: blogLiked.url,\n      likes: blogLiked.likes + 1\n    }\n\n    blogService\n      .update(id, blog)\n      .then(response => {\n        handleChangingErrorMessage(`${blogLiked.title} by ${blogLiked.author} liked successfully`, \"green\")\n        const newBlogs = blogs.map(blog => (blog.id === id ? response : blog))\n        setBlogs( newBlogs )\n        /* console.log(\"persons\", blogs) */\n      })\n      .catch(() => {\n        handleChangingErrorMessage(`${blogLiked.title} like failed`, \"red\")\n      })\n    \n  }\n\n  return (\n    <div>\n      <h1>Blogs</h1>\n      <ErrorMessage errorObject={errorMessage} />\n      <Form formSubmit={addBlog} newAuthor={newAuthor} newTitle={newTitle} newUrl={newUrl} authorHandler={handleAuthorChange} titleHandler={handleTitleChange} urlHandler={handleUrlChange} />\n      <BlogList blogs={blogs} onPostLike={onPostLike} />\n    </div>\n  )\n\n}\n\nexport default App\n","import ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}